# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###############################################################################
#                                                                             #
#  Copyright © 2024      -- LIRMM/CNRS/UM                                     #
#                           (Laboratoire d'Informatique, de Robotique et de   #
#                           Microélectronique de Montpellier /                #
#                           Centre National de la Recherche Scientifique /    #
#                           Université de Montpellier)                        #
#                           CRIStAL/CNRS/UL                                   #
#                           (Centre de Recherche en Informatique, Signal et   #
#                           Automatique de Lille /                            #
#                           Centre National de la Recherche Scientifique /    #
#                           Université de Lille)                              #
#                                                                             #
#  Auteurs/Authors:                                                           #
#                   Clément AGRET      <cagret@mailo.com>                     #
#                   Annie   CHATEAU    <annie.chateau@lirmm.fr>               #
#                   Antoine LIMASSET   <antoine.limasset@univ-lille.fr>       #
#                   Alban   MANCHERON  <alban.mancheron@lirmm.fr>             #
#                   Camille MARCHET    <camille.marchet@univ-lille.fr>        #
#                                                                             #
#  Programmeurs/Programmers:                                                  #
#                   Clément AGRET      <cagret@mailo.com>                     #
#                   Alban   MANCHERON  <alban.mancheron@lirmm.fr>             #
#                                                                             #
#  -------------------------------------------------------------------------  #
#                                                                             #
#  This file is part of BijectHash.                                           #
#                                                                             #
#  BijectHash is free software: you can redistribute it and/or modify it      #
#  under the terms of the GNU General Public License as published by the      #
#  Free Software Foundation, either version 3 of the License, or (at your     #
#  option) any later version.                                                 #
#                                                                             #
#  BijectHash is distributed in the hope that it will be useful, but WITHOUT  #
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or      #
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for   #
#  more details.                                                              #
#                                                                             #
#  You should have received a copy of the GNU General Public License along    #
#  with BijectHash. If not, see <https://www.gnu.org/licenses/>.              #
#                                                                             #
###############################################################################

########################
# Global configuration #
########################

# aminclude_static.am generated automatically by Autoconf
# from AX_AM_MACROS_STATIC on Mon May 13 20:15:32 CEST 2024

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@BUILD_DOC_TRUE@am__append_1 = doc
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@am__append_2 = packaging
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@am__append_3 =  \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	coverage-dir \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	coverage-summary
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@am__append_4 =  \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	coverage-dir \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	coverage-summary
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@am__append_5 = coverage-text
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@am__append_6 = coverage-text
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@am__append_7 = coverage-xml
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@am__append_8 = coverage-html
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@am__append_9 = coverage-html
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@am__append_10 = coverage-legacy
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@am__append_11 = coverage-json
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@am__append_12 = coverage-sonarqube
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@am__append_13 = coverage-cobertura
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@am__append_14 = coverage-cobertura \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	coverage-cobertura
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@am__append_15 = coverage-coveralls
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@am__append_16 = coverage-csv
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/m4/ax_ac_append_to_file.m4 \
	$(top_srcdir)/config/m4/ax_ac_print_to_file.m4 \
	$(top_srcdir)/config/m4/ax_add_am_macro_static.m4 \
	$(top_srcdir)/config/m4/ax_am_macros_static.m4 \
	$(top_srcdir)/config/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/config/m4/ax_append_flag.m4 \
	$(top_srcdir)/config/m4/ax_append_link_flags.m4 \
	$(top_srcdir)/config/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/config/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/config/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/config/m4/ax_code_coverage.m4 \
	$(top_srcdir)/config/m4/ax_compare_version.m4 \
	$(top_srcdir)/config/m4/ax_compiler_flags_ldflags.m4 \
	$(top_srcdir)/config/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/m4/ax_file_escapes.m4 \
	$(top_srcdir)/config/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/config/m4/ax_pthread.m4 \
	$(top_srcdir)/config/m4/ax_require_defined.m4 \
	$(top_srcdir)/config/m4/libtool.m4 \
	$(top_srcdir)/config/m4/ltoptions.m4 \
	$(top_srcdir)/config/m4/ltsugar.m4 \
	$(top_srcdir)/config/m4/ltversion.m4 \
	$(top_srcdir)/config/m4/lt~obsolete.m4 \
	$(top_srcdir)/config/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_pkgdata_DATA) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgdatadir)"
DATA = $(dist_pkgdata_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir distdir-am dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = resources src tests extra doc packaging
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/aminclude_static.am $(top_srcdir)/config/compile \
	$(top_srcdir)/config/config.guess \
	$(top_srcdir)/config/config.h.in \
	$(top_srcdir)/config/config.sub \
	$(top_srcdir)/config/install-sh $(top_srcdir)/config/ltmain.sh \
	$(top_srcdir)/config/missing AUTHORS COPYING ChangeLog INSTALL \
	NEWS TODO config/compile config/config.guess config/config.sub \
	config/depcomp config/install-sh config/ltmain.sh \
	config/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARCH = @ARCH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLOC = @CLOC@
CODE_COVERAGE_CFLAGS = @CODE_COVERAGE_CFLAGS@
CODE_COVERAGE_CPPFLAGS = @CODE_COVERAGE_CPPFLAGS@
CODE_COVERAGE_CXXFLAGS = @CODE_COVERAGE_CXXFLAGS@
CODE_COVERAGE_ENABLED = @CODE_COVERAGE_ENABLED@
CODE_COVERAGE_LIBS = @CODE_COVERAGE_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEB_BUILDER = @DEB_BUILDER@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN_PAPER_SIZE = @DOXYGEN_PAPER_SIZE@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DX_CONFIG = @DX_CONFIG@
DX_DOCDIR = @DX_DOCDIR@
DX_DOT = @DX_DOT@
DX_DOXYGEN = @DX_DOXYGEN@
DX_DVIPS = @DX_DVIPS@
DX_EGREP = @DX_EGREP@
DX_ENV = @DX_ENV@
DX_FLAG_chi = @DX_FLAG_chi@
DX_FLAG_chm = @DX_FLAG_chm@
DX_FLAG_doc = @DX_FLAG_doc@
DX_FLAG_dot = @DX_FLAG_dot@
DX_FLAG_html = @DX_FLAG_html@
DX_FLAG_man = @DX_FLAG_man@
DX_FLAG_pdf = @DX_FLAG_pdf@
DX_FLAG_ps = @DX_FLAG_ps@
DX_FLAG_rtf = @DX_FLAG_rtf@
DX_FLAG_xml = @DX_FLAG_xml@
DX_HHC = @DX_HHC@
DX_LATEX = @DX_LATEX@
DX_MAKEINDEX = @DX_MAKEINDEX@
DX_PDFLATEX = @DX_PDFLATEX@
DX_PERL = @DX_PERL@
DX_PROJECT = @DX_PROJECT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTRA_LDFLAGS = @EXTRA_LDFLAGS@
FGREP = @FGREP@
GCOV = @GCOV@
GCOVR = @GCOVR@
GENHTML = $(SED) -i 's,$(abs_top_builddir)/sphinx++,$(abs_top_srcdir_canonical)/src,' '$(CODE_COVERAGE_OUTPUT_FILE)' && @GENHTML@
GREP = @GREP@
HAVE_CXX17 = @HAVE_CXX17@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBNAME = @LIBNAME@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_VERSION = @LIB_VERSION@
LIB_VERSION_EXT = @LIB_VERSION_EXT@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OHCOUNT = @OHCOUNT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_AUTHORS = @PACKAGE_AUTHORS@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_COPYRIGHT_DATE = @PACKAGE_COPYRIGHT_DATE@
PACKAGE_DESCRIPTION = @PACKAGE_DESCRIPTION@
PACKAGE_LICENCE = @PACKAGE_LICENCE@
PACKAGE_LOGO = @PACKAGE_LOGO@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_PRETTY_NAME = @PACKAGE_PRETTY_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_CXX = @PTHREAD_CXX@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
hacked_prefix = @hacked_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ifGNUmake = @ifGNUmake@
ifnGNUmake = @ifnGNUmake@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = resources src tests extra $(am__append_1) $(am__append_2)
dist_pkgdata_DATA = \
  AUTHORS ChangeLog README.md \
  LICENSE.md

EXTRA_DIST = \
  COPYING INSTALL NEWS \
  config/fix-timestamp.sh \
  config/version

ACLOCAL_AMFLAGS = -I config/m4
CODE_COVERAGE_OUTPUT_DIRECTORY = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/html-legacy
CODE_COVERAGE_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/$(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage-html-legacy.info
CODE_COVERAGE_BRANCH_COVERAGE = 1
CODE_COVERAGE_LCOV_RMOPTS_DEFAULT = --remove \
	"$(CODE_COVERAGE_OUTPUT_FILE).tmp" "/usr/*" --remove \
	"$(CODE_COVERAGE_OUTPUT_FILE).tmp" "*/tests/*"
# Trick to merge headers accessed from symbolic link and headers
# accessed directly from src directory.
abs_top_srcdir_canonical = $(shell readlink -f "$(abs_top_srcdir)")
@CODE_COVERAGE_ENABLED_TRUE@GITIGNOREFILES = $(GITIGNOREFILES) $(CODE_COVERAGE_OUTPUT_FILE) $(CODE_COVERAGE_OUTPUT_DIRECTORY)
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_lcov_cap = $(code_coverage_v_lcov_cap_$(V))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_lcov_cap_ = $(code_coverage_v_lcov_cap_$(AM_DEFAULT_VERBOSITY))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_lcov_cap_0 = @echo "  LCOV   --capture" $(CODE_COVERAGE_OUTPUT_FILE);
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_lcov_ign = $(code_coverage_v_lcov_ign_$(V))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_lcov_ign_ = $(code_coverage_v_lcov_ign_$(AM_DEFAULT_VERBOSITY))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_lcov_ign_0 = @echo "  LCOV   --remove /tmp/*" $(CODE_COVERAGE_IGNORE_PATTERN);
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_genhtml = $(code_coverage_v_genhtml_$(V))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_genhtml_ = $(code_coverage_v_genhtml_$(AM_DEFAULT_VERBOSITY))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_v_genhtml_0 = @echo "  GEN   " "$(CODE_COVERAGE_OUTPUT_DIRECTORY)";
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_quiet = $(code_coverage_quiet_$(V))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_quiet_ = $(code_coverage_quiet_$(AM_DEFAULT_VERBOSITY))
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_quiet_0 = --quiet

# sanitizes the test-name: replaces with underscores: dashes and dots
@CODE_COVERAGE_ENABLED_TRUE@code_coverage_sanitize = $(subst -,_,$(subst .,_,$(1)))
@CODE_COVERAGE_ENABLED_TRUE@AM_DISTCHECK_CONFIGURE_FLAGS = $(AM_DISTCHECK_CONFIGURE_FLAGS) --disable-code-coverage
DEFAULT_CODE_COVERAGE_TARGETS = $(am__append_3) $(am__append_5) \
	$(am__append_8) $(am__append_10)
AVAILABLE_CODE_COVERAGE_TARGETS = coverage-legacy $(am__append_4) \
	$(am__append_6) $(am__append_7) $(am__append_9) \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	$(am__append_14) $(am__append_15) $(am__append_16)
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@code_coverage = $(code_coverage_@AM_V@)
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@code_coverage_ = $(code_coverage_@AM_DEFAULT_V@)
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@code_coverage_0 = @echo "  GCOVR   " $@;
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@code_coverage_1 = 
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@GCOVR_CORE_OPTS = \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  --gcov-executable "$(GCOV)"		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  --root "$(top_srcdir)"		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  --exclude-unreachable-branches	\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  --exclude '^(.*/)?tests/'		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  --filter '^(.*/)?src/'

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@GCOVR_OPTS = $(GCOVR_CORE_OPTS) --use-gcov-files --keep

### Ensure tests were run

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@check_ok = tests/test-suite.log

### Generate all coverage reports

### Code coverage summary

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@CODE_COVERAGE_SUMMARY_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/summary.txt

### Code coverage text report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@CODE_COVERAGE_TEXT_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/report.txt

### Code coverage XML report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@CODE_COVERAGE_XML_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/report.xml

### Code coverage HTML report
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@CODE_COVERAGE_OUTPUT_HTML_DIRECTORY = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/html
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@CODE_COVERAGE_OUTPUT_HTML_FILE = $(CODE_COVERAGE_OUTPUT_HTML_DIRECTORY)/report.html

### Code coverage JSON report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@CODE_COVERAGE_JSON_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/report.json

### Code coverage Sonarqube XML report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@CODE_COVERAGE_SONARQUBE_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/sonarqube-report.xml
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@CODE_COVERAGE_COBERTURA_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/cobertura-report.xml

### Code coverage Cobertura XML report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@CODE_COVERAGE_COBERTURA_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/cobertura-report.xml

### Code coverage Coveralls JSON report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@CODE_COVERAGE_COVERALLS_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/coveralls-report.json

### Code coverage CSV report

# named target
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@CODE_COVERAGE_CSV_OUTPUT_FILE = $(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)/report.csv

####################
# Cleaning targets #
####################
MOSTLYCLEANFILES = *~ config/*~
CLEANFILES = *~ config/*~
DISTCLEANFILES = *~ $(distdir).tar.gz \
	@PACKAGE@_@PACKAGE_VERSION@_@ARCH@.deb $(LIB_SYMLINK)
MAINTAINERCLEANFILES = *~ config/*~
all: all-recursive

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/aminclude_static.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/aminclude_static.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config/config.h: config/stamp-h1
	@test -f $@ || rm -f config/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) config/stamp-h1

config/stamp-h1: $(top_srcdir)/config/config.h.in $(top_builddir)/config.status
	@rm -f config/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config/config.h
$(top_srcdir)/config/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f config/stamp-h1
	touch $@

distclean-hdr:
	-rm -f config/config.h config/stamp-h1

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
@CODE_COVERAGE_ENABLED_FALSE@clean-local:
@CODE_COVERAGE_ENABLED_FALSE@distclean-local:
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_pkgdataDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dist_pkgdataDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-cscope clean-generic \
	clean-libtool clean-local cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-local distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-dist_pkgdataDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-dist_pkgdataDATA

.PRECIOUS: Makefile


.PHONY: always-build

# Fake target to force some rule to be applied
always-build:

########################
# Build debian package #
########################

.PHONY: deb

# named target
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@deb: @PACKAGE@_@PACKAGE_VERSION@_@ARCH@.deb

# rule
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@@PACKAGE@_@PACKAGE_VERSION@_@ARCH@.deb: always-build
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	@if [ "@DEB_BUILDER@" == "" ]; then \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  echo "You need to install a debian package builder and to reconfigure this package.";\
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  exit 1;\
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	fi
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) dist
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(am__remove_distdir)
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(AM_V_at)$(MKDIR_P) $(distdir)/_build
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(AM_V_at)$(MKDIR_P) $(distdir)/_inst/_deb/$(prefix)
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(AM_V_at)chmod a-w $(distdir)
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(AM_V_at)dc_install_base=`$(am__cd) $(distdir)/_inst/_deb/$(prefix) && pwd | $(SED) -e 's,^[^:\\/]:[\\/],/,'` \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cd $(distdir)/_build \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && HACKED_PREFIX=$(prefix) ../configure --srcdir=.. --prefix="$$dc_install_base" CC="$(CC)" CXX="$(CXX)" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	    $(DISTCHECK_CONFIGURE_FLAGS) \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) localedir=$$localedir \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) check \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) install \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cd ../_inst/_deb \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cp "$(abs_top_builddir)/resources/@PACKAGE@-@PACKAGE_VERSION@.stats" "./$(pkgdatadir)/" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && find . -type f -exec md5sum {} \; | $(SED) "s,\.\/,,g" > ../md5sums \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@          && $(MKDIR_P) DEBIAN \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && mv ../md5sums DEBIAN/ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cp ../../_build/packaging/postinst DEBIAN/ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && chmod 755 DEBIAN/postinst \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cp ../../_build/packaging/prerm DEBIAN/ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && chmod 755 DEBIAN/prerm \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(SED) "s/@INSTALLED_SIZE@/`du -ck . | tail -1 | cut -f1`/" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	       ../../_build/packaging/control > DEBIAN/control \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cd ../ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && dpkg -b _deb $@ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && mv $@ ../../ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && rm -f "$$dc_install_base/DEBIAN/control" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && rm -f "$$dc_install_base/DEBIAN/prerm" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && rm -f "$$dc_install_base/DEBIAN/postinst" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && cd ../_build \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	        distuninstallcheck \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && chmod -R a-w "$$dc_install_base" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && ({ \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	       (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	      } \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	      || { rm -rf "$$dc_destdir"; exit 1; }) \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && rm -rf "$$dc_destdir" \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	$(am__remove_distdir)
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	@echo "$@ is ready for distribution" | \
@BUILD_DOC_TRUE@@MAKE_RELEASE_TRUE@	  $(SED) 'h;s/./=/g;p;x;p;x'

# Fake target to abort packages construction
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@deb:
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo "====================================================================="
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo "Release construction is disabled since code coverage is enabled."
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo "Consider re-run the configure script without --enable-code-coverage"
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo "option (or using explicit --disable-code-coverage option)."
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo "====================================================================="
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_TRUE@@MAKE_RELEASE_FALSE@	@false

@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@deb:
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo "====================================================================="
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo "Release construction is disabled. Your local system seems to miss"
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo "the 'dpkg' command."
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo "====================================================================="
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@echo
@BUILD_DOC_TRUE@@CODE_COVERAGE_ENABLED_FALSE@@MAKE_RELEASE_FALSE@	@false

# Fake target to abort packages construction
@BUILD_DOC_FALSE@deb:
@BUILD_DOC_FALSE@	@echo
@BUILD_DOC_FALSE@	@echo "====================================================================="
@BUILD_DOC_FALSE@	@echo
@BUILD_DOC_FALSE@	@echo "Release construction is disabled. Your local system probably misses"
@BUILD_DOC_FALSE@	@echo "one of the 'doxygen' or 'pdftex' command."
@BUILD_DOC_FALSE@	@echo
@BUILD_DOC_FALSE@	@echo "====================================================================="
@BUILD_DOC_FALSE@	@echo
@BUILD_DOC_FALSE@	@false

#################
# Code Coverage #
#################

# This can be overriden by environment variable
CODE_COVERAGE_OUTPUT_TOP_DIRECTORY ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage

# Code coverage
#
# Optional:
#  - CODE_COVERAGE_DIRECTORY: Top-level directory for code coverage reporting.
#    Multiple directories may be specified, separated by whitespace.
#    (Default: $(top_builddir))
#  - CODE_COVERAGE_OUTPUT_FILE: Filename and path for the .info file generated
#    by lcov for code coverage. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info)
#  - CODE_COVERAGE_OUTPUT_DIRECTORY: Directory for generated code coverage
#    reports to be created. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage)
#  - CODE_COVERAGE_BRANCH_COVERAGE: Set to 1 to enforce branch coverage,
#    set to 0 to disable it and leave empty to stay with the default.
#    (Default: empty)
#  - CODE_COVERAGE_LCOV_SHOPTS_DEFAULT: Extra options shared between both lcov
#    instances. (Default: based on )
#  - CODE_COVERAGE_LCOV_SHOPTS: Extra options to shared between both lcov
#    instances. (Default: )
#  - CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH: --gcov-tool pathtogcov
#  - CODE_COVERAGE_LCOV_OPTIONS_DEFAULT: Extra options to pass to the
#    collecting lcov instance. (Default: )
#  - CODE_COVERAGE_LCOV_OPTIONS: Extra options to pass to the collecting lcov
#    instance. (Default: )
#  - CODE_COVERAGE_LCOV_RMOPTS_DEFAULT: Extra options to pass to the filtering
#    lcov instance. (Default: empty)
#  - CODE_COVERAGE_LCOV_RMOPTS: Extra options to pass to the filtering lcov
#    instance. (Default: )
#  - CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT: Extra options to pass to the
#    genhtml instance. (Default: based on )
#  - CODE_COVERAGE_GENHTML_OPTIONS: Extra options to pass to the genhtml
#    instance. (Default: )
#  - CODE_COVERAGE_IGNORE_PATTERN: Extra glob pattern of files to ignore
#
# The generated report will be titled using the $(PACKAGE_NAME) and
# $(PACKAGE_VERSION). In order to add the current git hash to the title,
# use the git-version-gen script, available online.
# Optional variables
# run only on top dir
@CODE_COVERAGE_ENABLED_TRUE@ ifeq ($(abs_builddir), $(abs_top_builddir))
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_DIRECTORY ?= $(top_builddir)
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_OUTPUT_FILE ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_OUTPUT_DIRECTORY ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage

@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_BRANCH_COVERAGE ?=
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_SHOPTS_DEFAULT ?= $(if $(CODE_COVERAGE_BRANCH_COVERAGE),--rc lcov_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_SHOPTS ?= $(CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH ?= --gcov-tool "$(GCOV)"
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_OPTIONS_DEFAULT ?= $(CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_OPTIONS ?= $(CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_RMOPTS_DEFAULT ?=
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_LCOV_RMOPTS ?= $(CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT ?=$(if $(CODE_COVERAGE_BRANCH_COVERAGE),--rc genhtml_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_GENHTML_OPTIONS ?= $(CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)
@CODE_COVERAGE_ENABLED_TRUE@CODE_COVERAGE_IGNORE_PATTERN ?=

# Use recursive makes in order to ignore errors during check
@CODE_COVERAGE_ENABLED_TRUE@check-code-coverage:
@CODE_COVERAGE_ENABLED_TRUE@	-$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -k check
@CODE_COVERAGE_ENABLED_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) code-coverage-capture

# Capture code coverage data
@CODE_COVERAGE_ENABLED_TRUE@code-coverage-capture: code-coverage-capture-hook
@CODE_COVERAGE_ENABLED_TRUE@	$(code_coverage_v_lcov_cap)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --capture --output-file "$(CODE_COVERAGE_OUTPUT_FILE).tmp" --test-name "$(call code_coverage_sanitize,$(PACKAGE_NAME)-$(PACKAGE_VERSION))" --no-checksum --compat-libtool $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_OPTIONS)
@CODE_COVERAGE_ENABLED_TRUE@	$(code_coverage_v_lcov_ign)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --remove "$(CODE_COVERAGE_OUTPUT_FILE).tmp" "/tmp/*" $(CODE_COVERAGE_IGNORE_PATTERN) --output-file "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_RMOPTS)
@CODE_COVERAGE_ENABLED_TRUE@	-@rm -f "$(CODE_COVERAGE_OUTPUT_FILE).tmp"
@CODE_COVERAGE_ENABLED_TRUE@	$(code_coverage_v_genhtml)LANG=C $(GENHTML) $(code_coverage_quiet) $(addprefix --prefix ,$(CODE_COVERAGE_DIRECTORY)) --output-directory "$(CODE_COVERAGE_OUTPUT_DIRECTORY)" --title "$(PACKAGE_NAME)-$(PACKAGE_VERSION) Code Coverage" --legend --show-details "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_GENHTML_OPTIONS)
@CODE_COVERAGE_ENABLED_TRUE@	@echo "file://$(abs_builddir)/$(CODE_COVERAGE_OUTPUT_DIRECTORY)/index.html"

@CODE_COVERAGE_ENABLED_TRUE@code-coverage-clean:
@CODE_COVERAGE_ENABLED_TRUE@	-$(LCOV) --directory $(top_builddir) -z
@CODE_COVERAGE_ENABLED_TRUE@	-rm -rf "$(CODE_COVERAGE_OUTPUT_FILE)" "$(CODE_COVERAGE_OUTPUT_FILE).tmp" "$(CODE_COVERAGE_OUTPUT_DIRECTORY)"
@CODE_COVERAGE_ENABLED_TRUE@	-find . \( -name "*.gcda" -o -name "*.gcno" -o -name "*.gcov" \) -delete

@CODE_COVERAGE_ENABLED_TRUE@code-coverage-dist-clean:
@CODE_COVERAGE_ENABLED_TRUE@ else # ifneq ($(abs_builddir), $(abs_top_builddir))
@CODE_COVERAGE_ENABLED_TRUE@check-code-coverage:

@CODE_COVERAGE_ENABLED_TRUE@code-coverage-capture: code-coverage-capture-hook

@CODE_COVERAGE_ENABLED_TRUE@code-coverage-clean:

@CODE_COVERAGE_ENABLED_TRUE@code-coverage-dist-clean:
@CODE_COVERAGE_ENABLED_TRUE@ endif # ifeq ($(abs_builddir), $(abs_top_builddir))
# Use recursive makes in order to ignore errors during check
@CODE_COVERAGE_ENABLED_FALSE@check-code-coverage:
@CODE_COVERAGE_ENABLED_FALSE@	@echo "Need to reconfigure with --enable-code-coverage"
# Capture code coverage data
@CODE_COVERAGE_ENABLED_FALSE@code-coverage-capture: code-coverage-capture-hook
@CODE_COVERAGE_ENABLED_FALSE@	@echo "Need to reconfigure with --enable-code-coverage"

@CODE_COVERAGE_ENABLED_FALSE@code-coverage-clean:

@CODE_COVERAGE_ENABLED_FALSE@code-coverage-dist-clean:

# Hook rule executed before code-coverage-capture, overridable by the user
code-coverage-capture-hook:

.PHONY: check-code-coverage code-coverage-capture code-coverage-dist-clean code-coverage-clean code-coverage-capture-hook

code-coverage-capture-hook: coverage-dir

coverage-legacy: code-coverage-capture

coverage: $(DEFAULT_CODE_COVERAGE_TARGETS)

coverage-all: $(AVAILABLE_CODE_COVERAGE_TARGETS)

.PHONY: code-coverage-clean coverage-clean code-coverage-dist-clean	\
  coverage-all coverage-dir coverage-legacy coverage-summary		\
  coverage-text coverage-xml coverage-html coverage-json		\
  coverage-sonarqube coverage-cobertura coverage-coveralls		\
  coverage-csv coverage-clean-dir coverage-clean-summary		\
  coverage-clean-text coverage-clean-xml coverage-clean-html		\
  coverage-clean-json coverage-clean-sonarqube				\
  coverage-clean-cobertura coverage-clean-coveralls			\
  coverage-clean-csv coverage

@CODE_COVERAGE_ENABLED_TRUE@distclean-local: code-coverage-dist-clean

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@clean-local: coverage-clean

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-clean: code-coverage-clean				 \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  coverage-clean-summary coverage-clean-text			\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  coverage-clean-xml coverage-clean-html coverage-clean-json	\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  coverage-clean-sonarqube coverage-clean-cobertura		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@  coverage-clean-coveralls coverage-clean-csv
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)find $(top_builddir) -name "*.gcov" -delete
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) coverage-clean-dir

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@.NOTPARALLEL:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@$(check_ok): always-build
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) $(@F) -C $(@D)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@gcov_files:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_CORE_OPTS) -keep
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)test "$(abs_top_builddir)" = "$(abs_top_srcdir)" \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	|| find $(top_builddir) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  -name "*.gcov" \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  -exec $(SED) -i 's,0:Source:../$(LIBNAME)/,0:Source:$(top_srcdir)/../src/,' "{}" \;

### Create coverage report directory

# named target and rule

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-dir: $(check_ok)
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) gcov_files
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)$(MKDIR_P) "$(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)"

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-clean-dir:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)if test -d "$(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  echo "Removing any existing coverage directory"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  rmdir "$(CODE_COVERAGE_OUTPUT_TOP_DIRECTORY)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	fi

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-summary: $(CODE_COVERAGE_SUMMARY_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-clean-summary:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_SUMMARY_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  echo "Cleaning code coverage summary"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_SUMMARY_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@$(CODE_COVERAGE_SUMMARY_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage summary" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --print-summary \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --output "$@.tmp" > "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(AM_V_at)rm -f  "$@.tmp"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage text report (with summary) is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@coverage-text: $(CODE_COVERAGE_TEXT_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@coverage-clean-text:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_TEXT_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	  echo "Cleaning code coverage text report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_TEXT_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@$(CODE_COVERAGE_TEXT_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage text report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage text report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@coverage-text:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "Code coverage text reports using 'gcovr' is disabled since your gcovr"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_TXT_ENABLED_FALSE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@coverage-xml: $(CODE_COVERAGE_XML_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@coverage-clean-xml:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_XML_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	  echo "Cleaning code coverage XML report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_XML_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@$(CODE_COVERAGE_XML_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage XML report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	  --xml --xml-pretty \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage XML report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@coverage-xml:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "Code coverage XML reports using 'gcovr' is disabled since your gcovr"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@false

# named target

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@coverage-html: $(CODE_COVERAGE_OUTPUT_HTML_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@coverage-clean-html:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	@if test -d "$(CODE_COVERAGE_OUTPUT_HTML_DIRECTORY)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  echo "Cleaning code coverage HTML report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  rm -f $(CODE_COVERAGE_OUTPUT_HTML_FILE:.html=.*.html); \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  rm -f $(CODE_COVERAGE_OUTPUT_HTML_FILE); \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  rm -f $(CODE_COVERAGE_OUTPUT_HTML_FILE:.html=.css); \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  rm -rf $(CODE_COVERAGE_OUTPUT_HTML_DIRECTORY); \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@$(CODE_COVERAGE_OUTPUT_HTML_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage HTML report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	$(AM_V_at)$(MKDIR_P) "$(CODE_COVERAGE_OUTPUT_HTML_DIRECTORY)"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  --html --html-details --html-title "GCOVR - Code Coverage Report" \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	  --merge-mode-functions strict \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@          --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage HTML report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@coverage-html:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "Code coverage HTML reports using 'gcovr' is disabled since your gcovr"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_HTML_ENABLED_FALSE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@coverage-json: $(CODE_COVERAGE_JSON_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@coverage-clean-json:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_JSON_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	  echo "Cleaning code coverage JSON report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_JSON_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@$(CODE_COVERAGE_JSON_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage JSON report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	  --json --json-pretty \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage JSON report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@coverage-json:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "Code coverage JSON reports using 'gcovr' is disabled since your gcovr"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_JSON_ENABLED_FALSE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@coverage-sonarqube: $(CODE_COVERAGE_SONARQUBE_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@coverage-clean-sonarqube:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_SONARQUBE_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	  echo "Cleaning code coverage Sonarqube XML report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_SONARQUBE_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@$(CODE_COVERAGE_SONARQUBE_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage Sonarqube XML report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	  --json --json-pretty \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage Sonarqube XML report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@coverage-sonarqube:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "Code coverage Sonarqube XML reports using 'gcovr' is disabled since"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "your gcovr version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@@GCOVR_SONARQUBE_ENABLED_FALSE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-cobertura: $(CODE_COVERAGE_COBERTURA_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-clean-cobertura:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_COBERTURA_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  echo "Cleaning code coverage Cobertura XML report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_COBERTURA_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@$(CODE_COVERAGE_COBERTURA_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage Cobertura XML report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --cobertura --cobertura-pretty \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage Cobertura XML report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@coverage-cobertura: $(CODE_COVERAGE_COBERTURA_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@$(CODE_COVERAGE_COBERTURA_OUTPUT_FILE): $(CODE_COVERAGE_XML_OUTPUT_FILE)
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@$(AM_V_P) && echo "Using XML report as code coverage Cobertura report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@$(code_coverage)cp "$<" "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage Cobertura XML report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@coverage-clean-cobertura:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_COBERTURA_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	  echo "Cleaning code coverage Cobertura XML report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_COBERTURA_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_TRUE@	fi

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@coverage-cobertura:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "Code coverage Cobertura XML reports using 'gcovr' is disabled since"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "your gcovr version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COBERTURA_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@@GCOVR_XML_ENABLED_FALSE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-coveralls: $(CODE_COVERAGE_COVERALLS_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-clean-coveralls:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_COVERALLS_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  echo "Cleaning code coverage Coveralls JSON report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_COVERALLS_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@$(CODE_COVERAGE_COVERALLS_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage Coveralls JSON report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --coveralls --coveralls-pretty \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage Coveralls JSON report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@coverage-coveralls:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "Code coverage Coveralls reports using 'gcovr' is disabled since your"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "gcovr version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_COVERALLS_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-csv: $(CODE_COVERAGE_CSV_OUTPUT_FILE)

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@coverage-clean-csv:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@if test -f "$(CODE_COVERAGE_CSV_OUTPUT_FILE)"; then \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  echo "Cleaning code coverage CSV report"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  rm -f "$(CODE_COVERAGE_CSV_OUTPUT_FILE)"; \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	fi

# rule
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@$(CODE_COVERAGE_CSV_OUTPUT_FILE): $(check_ok) | coverage-dir
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "Generating code coverage CSV report" || true
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	$(code_coverage)$(GCOVR) $(GCOVR_OPTS) \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --csv \
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	  --output "$@"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_TRUE@@GCOVR_ENABLED_TRUE@	@$(AM_V_P) && echo "=> Code coverage CSV report is available at '$@'." || true

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@coverage-csv:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "Code coverage CSV reports using 'gcovr' is disabled since your gcovr"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "version is too old."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "Consider updating your gcovr program on your system (and re-run the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "configure script) or re-run the configure script using the"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "--with-gcovr=<path> option in order to use a more recent version of"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_CSV_ENABLED_FALSE@@GCOVR_ENABLED_TRUE@	@false

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@clean-local: code-coverage-clean

@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-clean coverage-all coverage-dir coverage-summary		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-text coverage-xml coverage-html coverage-json			\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-sonarqube coverage-cobertura coverage-cobertura		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-coveralls coverage-csv coverage-clean-summary			\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-clean-text coverage-clean-xml coverage-clean-html		\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-clean-json coverage-clean-sonarqube coverage-clean-cobertura	\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage-clean-cobertura coverage-clean-coveralls coverage-clean-csv	\
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@coverage:
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo "Code coverage reports using 'gcovr' is disabled since not found while"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo "configure script was ran."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo "Consider re-run the configure script using the --with-gcovr=<path>"
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo "option in order to set a correct path for the 'gcovr' program."
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_TRUE@@GCOVR_ENABLED_FALSE@	@false

@CODE_COVERAGE_ENABLED_FALSE@code-coverage-clean coverage-clean code-coverage-dist-clean		\
@CODE_COVERAGE_ENABLED_FALSE@coverage-all coverage-dir coverage-legacy coverage-summary		\
@CODE_COVERAGE_ENABLED_FALSE@coverage-text coverage-xml coverage-html coverage-json			\
@CODE_COVERAGE_ENABLED_FALSE@coverage-sonarqube coverage-cobertura coverage-coveralls coverage-csv	\
@CODE_COVERAGE_ENABLED_FALSE@coverage-clean-summary coverage-clean-text coverage-clean-xml		\
@CODE_COVERAGE_ENABLED_FALSE@coverage-clean-html coverage-clean-json coverage-clean-sonarqube	\
@CODE_COVERAGE_ENABLED_FALSE@coverage-clean-cobertura coverage-clean-coveralls coverage-clean-csv	\
@CODE_COVERAGE_ENABLED_FALSE@coverage:
@CODE_COVERAGE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_FALSE@	@echo "Code coverage computation is disabled."
@CODE_COVERAGE_ENABLED_FALSE@	@echo "Consider re-run the configure script using the --enable-code-coverage"
@CODE_COVERAGE_ENABLED_FALSE@	@echo "option."
@CODE_COVERAGE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_FALSE@	@echo "====================================================================="
@CODE_COVERAGE_ENABLED_FALSE@	@echo
@CODE_COVERAGE_ENABLED_FALSE@	@false

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
