2024-03-26  DoccY <alban.mancheron@lirmm.fr>

	* doc/Doxyfile, src/bwt_transformer.hpp,
	src/inthash_transformer.cpp, src/minimizer_transformer.hpp,
	src/permutation_bit_transformer.cpp,
	src/permutation_bit_transformer.hpp, src/settings.hpp:
	Update code documentation and fix PermutationBitTransformer.
	For now, only BWT and minizer transformers are totally buggy.
	The composition transformer seems to work fine for k <= 32 but is still buggy for k > 32.
	
	
2024-03-26  DoccY <alban.mancheron@lirmm.fr>

	* :
	commit 0b8c7ce49a9cce1a04c92e38404ae93d00809ff3
	Author: DoccY <alban.mancheron@lirmm.fr>
	Date:   Tue Mar 26 04:23:23 2024 +0100
	
	
2024-03-26  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/composition_transformer.cpp,
	src/composition_transformer.hpp, src/program_options.cpp,
	src/settings.cpp:
	Add the possibility to compose transformers.
	
	
2024-03-26  DoccY <alban.mancheron@lirmm.fr>

	* src/canonical_transformer.cpp, src/gab_transformer.cpp,
	src/gab_transformer.hpp, src/identity_transformer.cpp,
	src/inthash_transformer.cpp, src/inthash_transformer.hpp,
	src/kmer_collector.cpp, src/lyndon_transformer.cpp, src/main.cpp,
	src/permutation_bit_transformer.cpp, src/program_options.cpp,
	src/settings.cpp, src/settings.hpp, src/transformer.cpp,
	src/transformer.hpp:
	Code refactoring and lots of bug fixes.
	
	
2024-03-26  Clement <cagret@mailo.com>

	* src/minimizer_transformer.cpp:
	Assertion 'decoded == kmer' failed.
	
	
2024-03-25  Clement <cagret@mailo.com>

	* src/Makefile, src/bwt_transformer.cpp, src/bwt_transformer.hpp,
	src/minimizer_transformer.cpp, src/minimizer_transformer.hpp,
	src/settings.cpp:
	Need to debug BWT
	
	
2024-03-25  DoccY <alban.mancheron@lirmm.fr>

	* run_methods.sh:
	Exporting fasta file path may be needed according to the Bash configuration.
	
	
2024-03-25  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/canonical_transformer.cpp,
	src/canonical_transformer.hpp, src/program_options.cpp,
	src/settings.cpp, src/settings.hpp:
	Adding canonical k-mer transformation.
	
	
2024-03-25  Clement <cagret@mailo.com>

	* src/minimizer_transformer.cpp, src/minimizer_transformer.hpp:
	Fix minimiser transform
	
	
2024-03-25  Clement <cagret@mailo.com>

	* run_methods.sh:
	Change nb bins default 1024
	
	
2024-03-25  Clement <cagret@mailo.com>

	* src/lyndon_transformer.cpp, src/lyndon_transformer.hpp,
	src/minimizer_transformer.cpp, src/transformer.hpp:
	Update transformer interfaces and implementations
	
	This commit includes updates to the Lyndon and minimizer transformer interfaces and their corresponding implementations. Changes aim to improve performance and maintainability.
	
	
2024-03-22  cagret <cagret@mailo.com>

	* src/minimizer_transformer.cpp, src/minimizer_transformer.hpp,
	src/transformer.hpp:
	TODO : DEBUG minimizer
	
	
2024-03-22  cagret <cagret@mailo.com>

	* src/minimizer_transformer.cpp:
	Debugging progress on minimizer transformer
	
	
2024-03-21  cagret <cagret@mailo.com>

	* src/minimizer_transformer.cpp, src/minimizer_transformer.hpp:
	add debug to minimizer TODO : debug
	
	
2024-03-21  cagret <cagret@mailo.com>

	* run_methods.sh, src/main.cpp,
	src/permutation_bit_transformer.cpp,
	src/permutation_bit_transformer.hpp,
	src/permutation_transformer.cpp, src/settings.cpp:
	Fix prefix and suffix extraction and combination in PermutationBitTransformer
	
	The PermutationBitTransformer class had issues with the way the prefix and
	suffix were extracted from the permuted k-mer and combined to form the final
	k-mer. This commit fixes these issues.
	
	Changes:
	- In the operator() function that takes a std::string as input:
	  - Fixed the calculation of e.suffix by using the correct suffix length.
	    The suffix length is now calculated as kmer.size() - settings.prefix_length.
	    The suffix is obtained by masking the permuted k-mer with
	    ((1ull << (2 * suffix_length)) - 1).
	
	- In the operator() function that takes an EncodedKmer as input:
	  - Fixed the combination of the prefix and suffix to form the original k-mer.
	    The prefix is now left-shifted by 2 * suffix_length positions before being
	    combined with the suffix using the bitwise OR operator.
	
	These changes ensure that the prefix and suffix are correctly extracted from
	the permuted k-mer, combined to form the original k-mer, and then decoded back
	into the original DNA string.
	
	
2024-03-21  cagret <cagret@mailo.com>

	* src/Makefile, src/minimizer_transformer.cpp,
	src/minimizer_transformer.hpp, src/program_options.cpp,
	src/settings.cpp:
	feat: Implement minimizer transformer
	
	- Add minimizer_transformer.cpp and minimizer_transformer.hpp
	- Modify run_methods.sh, Makefile, permutation_bit_transformer.cpp,
	  permutation_transformer.cpp, program_options.cpp, and settings.cpp
	- Remove untracked files: <q, res, res75, reschry, Zone.Identifier files
	
	
2024-03-18  cagret <cagret@mailo.com>

	* run_methods.sh:
	add BijectHash_with_checks to run_methods
	
	
2024-03-18  cagret <cagret@mailo.com>

	* src/Makefile, src/settings.cpp:
	Remove BWT
	
	
2024-03-18  cagret <cagret@mailo.com>

	* src/bwt_transformer.cpp, src/bwt_transformer.hpp,
	src/transformer.hpp:
	Revise Burrows-Wheeler Transform logic in BWTTransformer class => remove cpp and hpp
	
	
2024-03-18  cagret <cagret@mailo.com>

	* src/lyndon_transformer.cpp, src/lyndon_transformer.hpp,
	src/transformer.hpp:
	Store Lyndon rotation index in EncodedKmer for inverse rotation
	
	To be able to perform the inverse rotation and retrieve the original k-mer,
	the Lyndon rotation index 'j' is now stored in the 'EncodedKmer' structure.
	
	Changes:
	- Add 'rotation_index' field to 'EncodedKmer' structure in 'transformer.hpp'
	  to store the Lyndon rotation index.
	- In 'LyndonTransformer::operator()(const string &kmer)', store the Lyndon
	  rotation index 'j' in 'e.rotation_index' before returning the 'EncodedKmer'.
	- In 'LyndonTransformer::operator()(const Transformer::EncodedKmer &e)', use
	  'e.rotation_index' to perform the inverse rotation and retrieve the original
	  k-mer.
	
	Note: This change modifies the 'EncodedKmer' structure, so make sure to update
	any code that uses this structure.
	
	
2024-03-18  DoccY <alban.mancheron@lirmm.fr>

	* .gitignore, run_methods.sh, src/Makefile, src/kmer_index.cpp,
	src/program_options.cpp, src/settings.cpp:
	Adding two version of BujectHash in the default compilation target:
	- BijectHash_with_checks: Performs assertion checks and monitor the circular queue.
	- BijectHash_full_debug: Print lots of debugging information (and performs more assertion checks).
	
	IMPORTANT NOTE: for the moment, not all the transformation are working !!!
	
	* The following transformations works as expected with k-mer up to 45 (the prefix size is bounded by 13 and the suffix size is bounded by 32) :
	  - identity
	  - random_nucl
	  - cyclic
	  - inverse
	  - zigzag
	
	* The following transformations works as expected with k-mer up to 31 but are buggy for higher k value :
	  - inthash
	  - GAB
	
	* The following transformations are not correctly implemented:
	  - lyndon
	  - bwt
	
	
2024-03-17  cagret <cagret@mailo.com>

	* src/permutation_bit_transformer.cpp, src/settings.cpp:
	Comment define DEBUG
	
	
2024-03-15  cagret <cagret@mailo.com>

	* src/gab_transformer.cpp, src/inthash_transformer.cpp,
	src/permutation_bit_transformer.cpp:
	Modified gab_transformer, inthash_transformer and permutation_bit_transformer to handle sequences longer than 32 nucleotides
	
	
2024-03-15  cagret <cagret@mailo.com>

	* run_methods.sh:
	Enhance script flexibility with dynamic FASTA path and streamline execution options, add Lyndon and BWT transformations
	
	
2024-03-15  cagret <cagret@mailo.com>

	* src/Makefile, src/bwt_transformer.cpp, src/bwt_transformer.hpp,
	src/program_options.cpp, src/settings.cpp:
	Update Makefile, program options, settings, and add BWT transformer files
	
	
2024-03-15  cagret <cagret@mailo.com>

	* src/Makefile, src/gab_transformer.cpp,
	src/inthash_transformer.cpp, src/lyndon_transformer.cpp,
	src/lyndon_transformer.hpp, src/program_options.cpp,
	src/settings.cpp, src/transformer.hpp:
	Fix Lyndon rotation computation in LyndonTransformer to handle non-unique minimum elements and ensure correct lexicographical ordering.
	
	
2024-03-14  cagret <cagret@mailo.com>

	* src/inthash_transformer.cpp, src/inthash_transformer.hpp,
	src/program_options.cpp, src/transformer.hpp:
	Handle 64-bit encoding with Inthash
	
	
2024-03-14  cagret <cagret@mailo.com>

	* src/Makefile, src/permutation_bit_transformer.cpp,
	src/permutation_bit_transformer.hpp, src/settings.cpp:
	Add PermutationBitTransformer class for bit permutation
	
	
2024-03-12  cagret <cagret@mailo.com>

	* .gitignore, src/main.cpp:
	Replace chrono::milliseconds with rusage for CPU time measurement
	
	
2024-03-12  DoccY <alban.mancheron@lirmm.fr>

	* src/gab_transformer.cpp, src/gab_transformer.hpp,
	src/kmer_index.hpp, src/main.cpp, src/program_options.cpp,
	src/settings.cpp:
	Update the Gab transformer in order to accept custom parameters for the multiplier and the mask.
	Use the transformer description instead of the method name in the output.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile:
	Deactivate debug and circular queue watcher and remove assertion checking in the default makefile options.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/kmer_collector.cpp, src/kmer_collector.hpp,
	src/kmer_processor.cpp, src/kmer_processor.hpp, src/main.cpp:
	Add KmerCollector and KmerProcessor classes and moves most of teh main code into these two classes.
	Add a watcher to observe the circular queue evolution.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/kmer_index.cpp, src/kmer_index.hpp:
	Add a KmerIndex data structure to correctly handle concurrent access.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* doc/Doxyfile, src/file_reader.hpp, src/gab_transformer.hpp:
	Improve doxygen documentation.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/program_options.cpp, src/settings.cpp, src/settings.hpp:
	Add a new program option to change the circular queue capacity (defaults to 1024).
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/identity_transformer.hpp, src/inthash_transformer.hpp,
	src/permutation_transformer.cpp, src/permutation_transformer.hpp:
	BugFix: The description of teh PermutationTransformer was performed on the constructor parameter and not to the constructor attribute.
	Code Refactoring: just explicitly mark the overrided method.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/file_reader.cpp, src/file_reader.hpp,
	src/permutation_transformer.cpp:
	Code refactoring: Removing of the private _reset() method from fileReader class since is is mostly what to do when closing the file.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/circular_queue.hpp, src/file_reader.cpp,
	src/gab_transformer.cpp, src/permutation_transformer.cpp,
	src/transformer.cpp:
	Use the io_mutex spin-lock mutex to display messages.
	
	
2024-03-11  DoccY <alban.mancheron@lirmm.fr>

	* src/locker.cpp, src/locker.hpp:
	Add a spin-lock mutex class, a locker guardian facility and a multiple readers - single writer handler class.
	
	
2024-03-07  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/benchmark.cpp, src/{fileReader.cpp =>
	file_reader.cpp}, src/{fileReader.hpp => file_reader.hpp},
	src/main.cpp, src/permutations.cpp:
	Rename fileReader.* files in order to have the same naming convention for all source files.
	
	
2024-03-07  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/circular_queue.hpp, src/main.cpp,
	src/permutation_transformer.cpp, src/transformer.cpp:
	Using multiple producer-multiple consumer design pattern to read/transform the k-mers.
	Code is currently not well structured but seems to work pretty well.
	
	
2024-03-07  DoccY <alban.mancheron@lirmm.fr>

	* src/benchmark.cpp, src/permutations.cpp:
	Remove trailing spaces.
	
	
2024-03-07  DoccY <alban.mancheron@lirmm.fr>

	* src/gab_transformer.cpp, src/gab_transformer.hpp,
	src/permutation_transformer.cpp, src/transformer.cpp:
	BugFix: the GAB transformer wasn't working correctly.
	Improve documentation.
	
	
2024-03-07  DoccY <alban.mancheron@lirmm.fr>

	* src/identity_transformer.hpp, src/inthash_transformer.hpp:
	Fix documentation.
	
	
2024-03-07  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/fileReader.cpp, src/fileReader.hpp,
	src/main.cpp, src/program_options.cpp, src/program_options.hpp,
	src/settings.cpp, src/settings.hpp:
	Filter out program options from settings for a better logic.
	Now the BijectHash program can handle multiple files.
	A tag can be given to represent the set of input files and the global output contains more informations.
	The debug mode is more verbose and can be activate by passing "CXXFLAGS=-DDEBUG" to the make command line.
	
	
2024-03-05  DoccY <alban.mancheron@lirmm.fr>

	* run_methods.sh:
	Apply command line modifications to the run_methods script.
	
	
2024-03-05  DoccY <alban.mancheron@lirmm.fr>

	* :
	commit 57f96d67041f7124b0e2110aef4d3a5a7efc6bac
	Author: DoccY <alban.mancheron@lirmm.fr>
	Date:   Tue Mar 5 20:08:01 2024 +0100
	
	
2024-03-05  cagret <cagret@mailo.com>

	* run_methods.sh:
	Add -p option to parallelise the benchmark
	
	
2024-03-05  cagret <cagret@mailo.com>

	* run_methods.sh:
	add k1 in bench
	
	
2024-03-05  cagret <cagret@mailo.com>

	* run_methods.sh, src/main.cpp:
	add k1 optional option
	
	
2024-03-05  cagret <cagret@mailo.com>

	* :
	Add SRR.gz fiiles
	
	
2024-03-01  DoccY <alban.mancheron@lirmm.fr>

	* src/Makefile, src/main.cpp:
	Improve statistics computation by allowing to set a custom value for NB_BINS.
	Running `make clean && make NB_BINS=100` will generate a binary that group subtree sizes in 100 bins.
	By default, subtree sizes are grouped into 10 bins.
	The expected average number of subtrees per bin is the average size of the trees times the number of subtrees per bin (i.e., the bin_size which is output in the statistics).
	Notice that the bin_size is at least one (the nb of bins is bounded by the number of subtrees).
	
	
2024-03-01  DoccY <alban.mancheron@lirmm.fr>

	* src/fileReader.cpp:
	Restoring Warnings while reading fasta/fastq files even if not in debug mode since Warnings are not dedicated to debuging but to inform user that the file is badly formatted.
	
	
2024-03-01  cagret <cagret@mailo.com>

	* resources/seq.py, run_methods.sh, src/Makefile,
	src/benchmark.cpp, src/fileReader.cpp, src/gab_transformer.cpp,
	src/gab_transformer.hpp, src/main.cpp:
	Add GAB methode following inthash méthode and add inverse method in main.cpp place DEBUG méthod to fileReader modify seq.py for compilation also update Makefile to compile new GAB
	
	
2024-02-29  cagret <cagret@mailo.com>

	* resources/Makefile:
	change python to python3
	
	
2024-02-29  DoccY <alban.mancheron@lirmm.fr>

	* resources/{exemple1.fa => example1.fa}, resources/example1.fq,
	resources/{exemple2.fa => example2.fa}, resources/example2.fq,
	src/fileReader.cpp, src/fileReader.hpp, src/main.cpp,
	src/transformer.cpp:
	Add fastq file reader implementation.
	Add examples of fastq files in the resource directory.
	Add some more statistics computation in BijectHash.
	
	
2024-02-29  DoccY <alban.mancheron@lirmm.fr>

	* .gitignore, Makefile, doc/Doxyfile, doc/Makefile,
	resources/Makefile, src/Makefile, src/fileReader.cpp,
	src/identity_transformer.hpp, src/inthash_transformer.hpp,
	src/main.cpp, src/permutation_transformer.hpp, src/transformer.hpp:
	Add API documentation generation.
	Complete file documentation.
	Improve makefile handling.
	
	
2024-02-28  DoccY <alban.mancheron@lirmm.fr>

	* Makefile, resources/exemple1.fa, resources/exemple2.fa,
	src/fileReader.cpp, src/fileReader.hpp,
	src/identity_transformer.cpp, src/identity_transformer.hpp,
	src/inthash_transformer.cpp, src/inthash_transformer.hpp,
	src/main.cpp, src/permutation_transformer.cpp,
	src/permutation_transformer.hpp, src/transformer.cpp,
	src/transformer.hpp:
	Big code refactoring using a Transformer bijective functor.
	From now, fasta files are not loaded into memory and k-mers are extracted at glance.
	Fastq files are not handled yet (coming soon).
	GAB hash transfomer is not yet implemented.
	
	
2024-02-28  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	Add DEBUG
	
	
2024-02-27  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	Enhance k-mer processing with optional custom hash function support
	
	
2024-02-27  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	remove ksize
	
	
2024-02-27  cagret <cagret@mailo.com>

	* Makefile, src/benchmark.cpp, src/permutations.cpp,
	src/permutations.hpp:
	Refactor code to include permutations handling in benchmarking process
	
	
2024-02-27  cagret <cagret@mailo.com>

	* decile.py, src/benchmark.cpp, src/permutations.cpp,
	src/permutations.hpp:
	add decile.py to plot the suffixe by prefixe distribution, and modify the benchmark_output to print the decile per prefixe
	
	
2024-02-27  cagret <cagret@mailo.com>

	* boiteMoustache.py:
	Add boiteamoustache.py for calculating sum of SuffixCount per decile
	
	
2024-02-27  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	Refactor: Optimized parallel loops with OpenMP and replaced unordered_map with vector<vector> Updated function signatures, added <functional> header, and implemented new functionalities
	
	
2024-02-27  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	fix and add kmerEncodedHashed splitEncodedKmer
	
	
2024-02-27  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	fixed free(): unaligned chunk detected in tcache 2 comment seedsort
	
	
2024-02-26  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	minor fix
	
	
2024-02-26  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	Add cyclic and zigzag permutation
	
	
2024-02-26  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	fixed missing comment
	
	
2024-02-26  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	Change  σ=24 to  σ=2*k
	
	
2024-02-26  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	Add GAB hash function implementation for k-mer prefix encoding in benchmarking, supporting k=30 with k1=12, k2=18 and adjusted σ=2*k1 (24) for optimized hash distribution
	
	
2024-02-26  cagret <cagret@mailo.com>

	* :
	rm large file
	
	
2024-02-26  cagret <cagret@mailo.com>

	* .gitignore, resources/seq.py:
	Add new gitignore rules
	
	
2024-02-25  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	fix identity permutation
	
	
2024-02-25  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	apply prefix/suffix logic to IntHash loop
	
	
2024-02-25  cagret <cagret@mailo.com>

	* src/benchmark.cpp, src/fileReader.cpp, src/fileReader.hpp:
	Enhance FASTA/FASTQ parsing and skip non-ACGT characters in encoding
	
	
2024-02-23  cagret <cagret@mailo.com>

	* src/benchmark.cpp:
	mem bench omp sync error fixed
	
	
2024-02-23  cagret <cagret@mailo.com>

	* Makefile, src/benchmark.cpp:
	minor updates
	
	
2024-02-23  cagret <cagret@mailo.com>

	* seq.py => resources/seq.py:
	add resources folder
	
	
2024-02-23  cagret <cagret@mailo.com>

	* benchmark.cpp, benchmark_hash.cpp, idVSrand.py, plot.py,
	plot_global.py, plot_hash.py, src/benchmark.cpp, fileReader.cpp =>
	src/fileReader.cpp, fileReader.hpp => src/fileReader.hpp, inthash.c
	=> src/inthash.c, inthash.h => src/inthash.h, main.cpp =>
	src/main.cpp, var.py:
	Cleanning repo
	
	
2024-02-23  cagret <cagret@mailo.com>

	* Makefile:
	Update Makefile
	
	
2024-02-23  cagret <cagret@mailo.com>

	* README.md:
	update Readme
	
	
2024-02-23  cagret <cagret@mailo.com>

	* benchmark.cpp, benchmark_hash.cpp, idVSrand.py, plot_global.py,
	plot_hash.py, var.py:
	Add parallelization using OpenMP and new plot
	
	
2024-02-22  cagret <cagret@mailo.com>

	* .gitignore, Makefile, README.md, benchmark.cpp,
	benchmark_hash.cpp, main.cpp, plot.py, plot_hash.py, seq.py,
	sequences.fasta:
	 Added benchmarking and plotting scripts, modified existing files, and deleted obsolete sequence file
	
	
2024-02-22  cagret <cagret@mailo.com>

	* main.cpp:
	Adjust mask calculation for larger k values, allocating 60 bits for k=30.((1ULL << (2 * k)) - 1)
	
	
2024-02-22  cagret <cagret@mailo.com>

	* main.cpp:
	Update main
	
	
2024-02-22  cagret <cagret@mailo.com>

	* Makefile, inthash.c, inthash.h, main.cpp:
	Add inthash.c and inthash.h, and modify Makefile and main.cpp; no changes staged for commit
	
	
2024-02-22  cagret <cagret@mailo.com>

	* README.md:
	Add Readme
	
	
2024-02-22  cagret <cagret@mailo.com>

	* .gitignore, Makefile, fileReader.cpp, fileReader.hpp, main.cpp,
	seq.py, sequences.fasta:
	Add FASTA file reader, k-mer permutation functionality, and related main program updates.
	
	
2024-02-22  cagret <cagret@mailo.com>

	* Initial commit

